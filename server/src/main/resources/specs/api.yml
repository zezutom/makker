swagger: "2.0"
info:
  description: "Make (formerly Integromat) connector suite. Choose how do you want to manage your low-code and no-code scenarios from your code!"
  version: "1.0.0"
  title: "Makker API Server"
  contact:
    email: "zezulatomas@gmail.com"
externalDocs:
  description: "Find out more about Makker"
  url: "https://github.com/zezutom/makker"
basePath: "/v1"
tags:
  - name: "Scenarios"
    description: A scenario lets you create and run automated tasks in Make (formerly Integromat).
    externalDocs:
      description: "Find out more"
      url: "https://www.make.com/en/api-documentation/scenarios"
schemes:
  - "https"
  - "http"
consumes:
  - application/json
produces:
  - application/json
paths:
  /scenarios:
    post:
      tags:
        - Scenarios
      summary: Create a scenario.
      description: "Create a new scenario from the provided blueprint"
      operationId: "createScenarioV1"
      parameters:
        - name: body
          in: body
          description: "Scenario definition."
          required: true
          schema:
            $ref: '#/definitions/CreateScenarioRequest'
      responses:
        "201":
          description: "The created scenario."
          schema:
            $ref: '#/definitions/Scenario'
        "400":
          description: "Bad request."
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: "Bad request."
          schema:
            $ref: '#/definitions/ErrorResponse'
  /scenarios/{scenarioId}:
    patch:
      tags:
        - Scenarios
      summary: Update a scenario.
      description: "Updates a scenario by uploading of a new or updated blueprint"
      operationId: "updateScenarioV1"
      parameters:
        - in: path
          name: scenarioId
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateScenarioRequest'
      responses:
        "201":
          description: "The updated scenario."
          schema:
            $ref: '#/definitions/Scenario'
        "400":
          description: "Bad request."
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: "Bad request."
          schema:
            $ref: '#/definitions/ErrorResponse'
  /scenarios/{scenarioId}/blueprint:
    get:
      tags:
        - Scenarios
      summary: Get scenario's blueprint.
      description: "Download the blueprint (scenario definition) as a JSON string."
      operationId: "getScenarioBlueprintV1"
      parameters:
        - in: path
          name: scenarioId
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "The scenario's blueprint."
          schema:
            $ref: '#/definitions/Blueprint'
  /v1/scenarios/{scenarioId}/data:
    put:
      tags:
        - Scenarios
      summary: Set module data.
      description: "Updates a specific module in a scenario"
      operationId: "setModuleDataV1"
      parameters:
        - in: path
          name: scenarioId
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "The update result."
          schema:
            $ref: '#/definitions/UpdateResult'
        "400":
          description: "Bad request."
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: "Bad request."
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  CreateScenarioRequest:
    type: "object"
    required:
      - teamId
      - folderId
      - blueprint
    properties:
      teamId:
        type: integer
        format: int64
      folderId:
        type: integer
        format: int64
      blueprint:
        type: string
  UpdateScenarioRequest:
    type: "object"
    required:
      - teamId
      - folderId
      - blueprint
    properties:
      teamId:
        type: integer
        format: int64
      folderId:
        type: integer
        format: int64
      blueprint:
        type: string
  Scenario:
    type: object
    required:
      - id
      - teamId
      - folderId
      - name
    properties:
      id:
        type: integer
        format: int64
      teamId:
        type: integer
        format: int64
      folderId:
        type: integer
        format: int64
      name:
        type: string
  Blueprint:
    type: object
    required:
      - name
      - json
    properties:
      name:
        type: string
      json:
        type: string
      modules:
        type: array
        items:
          $ref: '#/definitions/Module'
  Module:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  UpdateResult:
    type: object
    required:
      - result
    properties:
      result:
        type: boolean
  ErrorResponse:
    description: "The server encountered an error while processing this request."
    type: object
    properties:
      errorCode:
        type: string
        description: "Error code."
      errorMessage:
        description: "A text message, presented primarily for troubleshooting purposes."
        type: string